#!/bin/bash
####################################################################################
###
### QUBIC miner
### os.dog integration: shatll(@osdog)
###
####################################################################################

#   example
#
#	{
#		"miner":"lolminer",
#		"algo":"nexapow",
#		"online":"1707474764",
#		"total_hr":"71842910",
#		"total_share":"1",
#		"total_badshare":"0",
#		"ver":"1.82a",
#		"hr":[11580000,27740000,0,0,2990000,0,22650000,6880000],
#		"share":[0,1,0,0,0,0,0,0],
#		"badshare":[0,0,0,0,0,0,0,0],
#		"invshare":[0,0,0,0,0,0,0,0],
#		"busid":["03","05","06","07","09","0b","0c","0d"],
#		"coin":"NEXA"
#		"temp":[31,28,29,29,31,29,30,30],     #  unnecessary field if 'busid' is provided
#		"temp2":[38,35,35,35,37,34,37,37],    #  unnecessary field if 'busid' is provided
#		"temp3":[0,0,0,0,0,0,0,0],            #  unnecessary field if 'busid' is provided
#		"fan":[45,45,44,45,44,44,45,46],      #  unnecessary field if 'busid' is provided
#	}


baseDir=`dirname $0`


LOG="/dog/log/qubic-gpu.log"

algo="qubic_GPU"
miner="qli-Client_GPU"
ver=`$baseDir/qli-Client --version | sed 's/Client Version //'`
[[ ! $ver ]] && ver='unknown'

data=$(
		jq -n \
    --arg algo "$algo" \
    --arg miner "$miner" \
		'{
			$miner,
			$algo
		}'
)
minername="qli-Client"
online_raw=`ps -C $minername -o etimes,cmd= | awk '/gpu/{print $1}'`
if [[ ! -z $online_raw ]]; then
  online=$(date --date "-$online_raw sec" +%s) #absolute time
  data=`jq ". += {\"online\": $online}" <<< "$data"`
fi

allGpuHrStr=`tail -n 20 $LOG | grep Trainer: | grep -Ev "Solution|argument|devices" | tail -n 1 | sed "s/.*Trainer: //"`

busid_json=[]
hr_json=[]
gpuList=`cat /run/dog/gpuStats | jq '[.gpu[] | select(.brand != "I")]'`
gpuCount=`gpu-detect all`
totalHr=0
for (( i=0; i < $gpuCount; i++ )); do
  awkArgs="{print \$$i}"
  gpuHrStr=`echo $allGpuHrStr | awk -F "|" "$awkArgs"`
  gpuId=`echo $gpuHrStr | sed 's/.*GPU #\([0-9]*\).*/\1/'`

  busid=`echo $gpuList | jq -r ".[$i].b"`
  busid_json=`jq ". += [\"$busid\"]" <<< "$busid_json"`


  hr=`echo $gpuHrStr | sed -e 's/GPU #.*: //; s# it\/s##'`
  hr_json=`jq ". += [$hr]" <<< "$hr_json"`
  totalHr=`echo "$totalHr + $hr" | bc`
done

if [[ ! -z $busid_json ]]; then
  data=`jq ". += {\"busid\": $busid_json}" <<< "$data"`
fi

if [[ ! -z $hr_json ]]; then
  data=`jq ". += {\"hr\": $hr_json}" <<< "$data"`
  data=`jq ". += {\"total_hr\": $totalHr}" <<< "$data"`
fi

allStatstr=`tail -n 20 $LOG | grep SOL: | tail -n 1`
totalSolutions=`echo $allStatstr | sed -e 's/.*SOL: //; s#/.*##'`
if [[ ! -z $totalSolutions ]]; then
  data=`jq ". += {\"total_share\": $totalSolutions}" <<< "$data"`
fi

gpu_version=$(tail -n -1000 "$LOG" | grep -aoP 'Trainer: cuda version \K\d+\.\d+' | tail -n -1)
sol=`echo $allStatstr | awk '/SOL:/ {print $7}'`
[[ $gpu_version ]] && ver="$ver E${gpu_version} SOL:${sol}"
#epoch=`echo $allStatstr | sed -e 's/.*E://; s# .*##'`
#[[ $epoch ]] && ver="$ver|E${epoch}"
data=`jq ". += {\"ver\": \"$ver\"}" <<< "$data"`

#   finally return json data
echo "$data" | jq -c
