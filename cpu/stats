#!/bin/bash
####################################################################################
###
### QUBIC miner
### os.dog integration: shatll(@osdog)
###
####################################################################################

#   example
#
#	{
#		"miner":"lolminer",
#		"algo":"nexapow",
#		"online":"1707474764",
#		"total_hr":"71842910",
#		"total_share":"1",
#		"total_badshare":"0",
#		"ver":"1.82a",
#		"hr":[11580000,27740000,0,0,2990000,0,22650000,6880000],
#		"share":[0,1,0,0,0,0,0,0],
#		"badshare":[0,0,0,0,0,0,0,0],
#		"invshare":[0,0,0,0,0,0,0,0],
#		"busid":["03","05","06","07","09","0b","0c","0d"],
#		"coin":"NEXA"
#		"temp":[31,28,29,29,31,29,30,30],     #  unnecessary field if 'busid' is provided
#		"temp2":[38,35,35,35,37,34,37,37],    #  unnecessary field if 'busid' is provided
#		"temp3":[0,0,0,0,0,0,0,0],            #  unnecessary field if 'busid' is provided
#		"fan":[45,45,44,45,44,44,45,46],      #  unnecessary field if 'busid' is provided
#	}


baseDir=`dirname $0`


LOG="/dog/log/qubic-cpu.log"

algo="qubic_CPU"
miner="qli-Client_CPU"
minername="qli-Client"
ver=`$baseDir/$minername --version | sed 's/Client Version //'`
[[ ! $ver ]] && ver='unknown'

data=$(
		jq -n \
    --arg algo "$algo" \
    --arg miner "$miner" \
		'{
			$miner,
			$algo
		}'
)

get_cpu_temp () {
	for HWMON in $(ls /sys/class/hwmon); do
		[[ -f /sys/class/hwmon/${HWMON}/name ]] &&
			local test=$(cat /sys/class/hwmon/${HWMON}/name | grep -c -E 'coretemp|k10temp|k8temp')
		if [[ $test -gt 0 ]]; then
			HWMON_DIR=/sys/class/hwmon/$HWMON
			break
		fi
	done
	local inputs=()
	local temp=
	[[ ! -z $HWMON_DIR ]] && readarray -t inputs < <(ls $HWMON_DIR/temp*_input | sort -V)
	[[ ${#inputs[@]} -eq 0 ]] && echo "null" && return 1
	local input=
	[[ -z "$1" ]] && input=0
	[[ "$1" =~ ^[0-9]+$ ]] && input=$1
	[[ ! -z $input && ! -z ${inputs[input]} ]] && temp=`awk '{ printf("%.0f\n", $1/1000)}' ${inputs[input]} 2>/dev/null`
	echo "${temp:-null}"
}
cpu_temp=$(get_cpu_temp)


online_raw=`ps -C $minername -o etimes,cmd= | awk '/cpu/{print $1}'`
if [[ ! -z $online_raw ]]; then
  online=$(date --date "-$online_raw sec" +%s) #absolute time
  data=`jq ". += {\"online\": $online}" <<< "$data"`
fi

allGpuHrStr=`tail -n 20 $LOG | grep SOL: | grep -Ev "Solution|argument|devices" | tail -n 1`

hr_json=[]
totalHr=0

for (( i=0; i < 1; i++ )); do
  hr=`echo $allGpuHrStr | sed -e 's/avg .*//; s/.* | \([.0-9a-zA-Z]*\) it\/s.*/\1/'`
  hr_json=`jq ". += [$hr]" <<< "$hr_json"`
  totalHr=`echo "$totalHr + $hr" | bc`
done

if [[ ! -z $hr_json ]]; then
  data=`jq ". += {\"hr\": $hr_json}" <<< "$data"`
  data=`jq ". += {\"total_hr\": $totalHr}" <<< "$data"`
fi

allStatstr=`tail -n 20 $LOG | grep SOL: | tail -n 1`
totalSolutions=`echo $allStatstr | sed -e 's/.*SOL: //; s#/.*##'`
if [[ ! -z $totalSolutions ]]; then
  data=`jq ". += {\"total_share\": $totalSolutions}" <<< "$data"`
fi

cpu_version=$(grep -aoP 'Trainer: cpu version \K\d+\.\d+' "$LOG" | tail -n 1)
sol=`echo $allStatstr | awk '/SOL:/ {print $7}'`
[[ $cpu_version ]] && ver="$ver E${cpu_version}"
[[ $sol ]] && ver="$ver SOL:${sol}"
#epoch=`echo $allStatstr | sed -e 's/.*E://; s# .*##'`
#[[ $epoch ]] && ver="$ver|E${epoch} |SOL ${sol}"
data=`jq ". += {\"ver\": \"$ver\"}" <<< "$data"`

#cpuTempIntel=(`sensors -u *-isa-* 2>/dev/null | grep Core -A1 | grep _input | sed 's/.*_input: //'`)
#cpuTempAMD=(`sensors -u k10temp-pci-* 2>/dev/null | grep "temp[0-9]_input" | sed "s/.*_input: //"`)
#cpu_temp=(`echo ${cpuTempIntel[@]} ${cpuTempAMD[@]}`)

cpuFanRPMIntel=(`sensors -u *-isa-* 2>/dev/null | grep fan -A1 | grep _input | sed 's/.*_input: //'`)
for v in ${cpuFanRPMIntel[@]}; do
    if [ ${v::-4} -gt 0 ]; then RMP=${v::-4}; fi; 
done

[[ $RMP ]] && data=`jq ". += {\"fan\": \"[$(($RMP*100/3200))]\"}" <<< "$data"`
[[ $cpu_temp ]] && data=`jq ". += {\"temp\": \"[$cpu_temp]\"}" <<< "$data"` 

#   finally return json data
echo "$data" | jq -c
